# .github/workflows/build.yml
name: SonarQube

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]
    types: [ opened, synchronize, reopened ]

jobs:
  build:
    name: Build & SonarCloud
    runs-on: ubuntu-latest

    steps:
      # Passo 0: Checkout
      - name: Checkout sources
        uses: actions/checkout@v4
        with: { fetch-depth: 0 }          # SonarCloud necessita del blame completo

      # Passo 1: crea cartelle Avro in tutti i moduli
      - name: Ensure Avro directories exist in every Java module
        run: |
          find lang/java -name pom.xml -exec dirname {} \; | while read m; do
            mkdir -p "$m/src/main/avro" "$m/src/test/avro"
            # Se vuoi tenerle vuote in Git, lascia un .gitignore come segue:
            printf "# Ignore everything\n*\n!.gitignore\n" > "$m/src/main/avro/.gitignore"
            printf "# Ignore everything\n*\n!.gitignore\n" > "$m/src/test/avro/.gitignore"
          done

      # Passo 2: installa dipendenze di sistema
      - name: Install system packages
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            build-essential cmake libboost-all-dev libssl-dev \
            python3 python3-pip ruby-full nodejs npm \
            dotnet-sdk-8.0                               # .NET 8 per Avro C#

      # Passo 3: setup JDK multipli
      - name: Setup JDK 8 11 17 21 24
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: |
            8
            11
            17
            21
            24

      # Passo 4: toolchains.xml
      - name: Write toolchains.xml
        run: |
          mkdir -p ~/.m2
          cat > ~/.m2/toolchains.xml <<'EOF'
          <toolchains>
            <toolchain>
              <type>jdk</type><provides><version>11</version></provides>
              <configuration><jdkHome>${JAVA_HOME_11_X64}</jdkHome></configuration>
            </toolchain>
            <toolchain>
              <type>jdk</type><provides><version>17</version></provides>
              <configuration><jdkHome>${JAVA_HOME_17_X64}</jdkHome></configuration>
            </toolchain>
            <toolchain>
              <type>jdk</type><provides><version>21</version></provides>
              <configuration><jdkHome>${JAVA_HOME_21_X64}</jdkHome></configuration>
            </toolchain>
          </toolchains>
          EOF

      # Passo 5: cache Maven
      - name: Cache Maven repo
        uses: actions/cache@v4
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-m2

      # Passo 6: build + Sonar con log compatti
      - name: Build all modules & run SonarCloud
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          mvn -B -q --fail-at-end -ntp clean verify \
              -Drat.skip=true \
              -Dmaven.build.cache.enabled=false \
              -Dsurefire.rerunFailingTestsCount=2 \
              -Dinvoker.skip=true \
              org.sonarsource.scanner.maven:sonar-maven-plugin:sonar \
              -Dsonar.projectKey=StitchMl_avro \
              -Dsonar.login=$SONAR_TOKEN
